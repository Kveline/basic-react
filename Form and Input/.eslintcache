[{"C:\\Users\\Yusuf\\Documents\\GitHub\\basic-react\\Form and Input\\src\\index.js":"1","C:\\Users\\Yusuf\\Documents\\GitHub\\basic-react\\Form and Input\\src\\App.js":"2","C:\\Users\\Yusuf\\Documents\\GitHub\\basic-react\\Form and Input\\src\\components\\SimpleInput.js":"3","C:\\Users\\Yusuf\\Documents\\GitHub\\basic-react\\Form and Input\\src\\hooks\\use-input.js":"4","C:\\Users\\Yusuf\\Documents\\GitHub\\basic-react\\Form and Input\\src\\components\\BasicForm.js":"5","C:\\Users\\Yusuf\\Documents\\GitHub\\basic-react\\Form and Input\\src\\hooks\\use-input-basic.js":"6"},{"size":142,"mtime":1616595887000,"results":"7","hashOfConfig":"8"},{"size":217,"mtime":1641172539762,"results":"9","hashOfConfig":"8"},{"size":2545,"mtime":1641174173821,"results":"10","hashOfConfig":"8"},{"size":878,"mtime":1641172772337,"results":"11","hashOfConfig":"8"},{"size":3276,"mtime":1641174188622,"results":"12","hashOfConfig":"8"},{"size":889,"mtime":1641173107285,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1msbcrv",{"filePath":"17","messages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"19","messages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"C:\\Users\\Yusuf\\Documents\\GitHub\\basic-react\\Form and Input\\src\\index.js",[],["28","29"],"C:\\Users\\Yusuf\\Documents\\GitHub\\basic-react\\Form and Input\\src\\App.js",[],"C:\\Users\\Yusuf\\Documents\\GitHub\\basic-react\\Form and Input\\src\\components\\SimpleInput.js",["30"],"import { useRef, useState } from \"react\";\nimport useInput from \"../hooks/use-input\";\n\nconst SimpleInput = (props) => {\n  // for name\n  const {\n    value: enteredName,\n    isValid: enteredNameIsValid,\n    hasError: nameInputHasError,\n    valueChangeHandler: nameChangedHandler,\n    inputBlurHandler: nameBlurHandler,\n    reset: resetNameInput,\n  } = useInput((value) => value.trim() !== \"\");\n\n  // for email\n  const {\n    value: enteredEmail,\n    isValid: enteredEmailIsValid,\n    hasError: emailInputHasError,\n    valueChangeHandler: emailChangedHandler,\n    inputBlurHandler: emailBlurHandler,\n    reset: resetEmailInput,\n  } = useInput((value) => value.includes(\"@\"));\n\n  const nameInputRef = useRef();\n\n  // checking all input is valid\n  let formIsValid = false;\n\n  if (enteredNameIsValid && enteredEmailIsValid) {\n    formIsValid = true;\n  }\n  // submision handler\n  const formSubmisionHandler = (event) => {\n    event.preventDefault();\n\n    if (!enteredNameIsValid && !enteredEmailIsValid) {\n      return;\n    }\n\n    console.log(enteredName);\n    const enteredValue = nameInputRef.current.value;\n    console.log(enteredValue);\n    // reset form\n    // nameInputRef.current.value = \"\"; => NOT IDEAL, DON'T MANIPULATE DOM\n    resetNameInput();\n    resetEmailInput();\n  };\n\n  // styling for validity\n  const nameInputClasses = nameInputHasError\n    ? \"form-control invalid\"\n    : \"form-control\";\n\n  const emailInputClasses = emailInputHasError\n    ? \"form-control invalid\"\n    : \"form-control\";\n\n  return (\n    <form onSubmit={formSubmisionHandler}>\n      <div className={nameInputClasses}>\n        <label htmlFor=\"name\">Your Name</label>\n        <input\n          ref={nameInputRef}\n          type=\"text\"\n          id=\"name\"\n          onChange={nameChangedHandler}\n          onBlur={nameBlurHandler}\n          value={enteredName}\n        />\n        {nameInputHasError && (\n          <p className=\"error-text\">Name must not be empty.</p>\n        )}\n      </div>\n\n      <div className={emailInputClasses}>\n        <label htmlFor=\"email\">Your Email</label>\n        <input\n          onChange={emailChangedHandler}\n          onBlur={emailBlurHandler}\n          type=\"email\"\n          id=\"email\"\n          value={enteredEmail}\n        />\n        {emailInputHasError && <p className=\"error-text\">Email is Invalid!</p>}\n      </div>\n      <div className=\"form-actions\">\n        <button disabled={!formIsValid} type=\"submit\">\n          Submit\n        </button>\n      </div>\n    </form>\n  );\n};\n\nexport default SimpleInput;\n","C:\\Users\\Yusuf\\Documents\\GitHub\\basic-react\\Form and Input\\src\\hooks\\use-input.js",[],"C:\\Users\\Yusuf\\Documents\\GitHub\\basic-react\\Form and Input\\src\\components\\BasicForm.js",[],"C:\\Users\\Yusuf\\Documents\\GitHub\\basic-react\\Form and Input\\src\\hooks\\use-input-basic.js",[],{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","severity":1,"message":"36","line":1,"column":18,"nodeType":"37","messageId":"38","endLine":1,"endColumn":26},"no-native-reassign",["39"],"no-negated-in-lhs",["40"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]